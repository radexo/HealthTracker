# Create preload script for security
preload_js_content = '''const { contextBridge, ipcRenderer } = require('electron');

// Expose protected methods that allow the renderer process to use
// the ipcRenderer without exposing the entire object
contextBridge.exposeInMainWorld('electronAPI', {
    // Database operations
    dbQuery: (sql, params) => ipcRenderer.invoke('db-query', sql, params),
    dbRun: (sql, params) => ipcRenderer.invoke('db-run', sql, params),
    
    // File operations
    exportData: (format) => ipcRenderer.invoke('export-data', format),
    backupDatabase: () => ipcRenderer.invoke('backup-database'),
    
    // App info
    getAppInfo: () => ipcRenderer.invoke('get-app-info'),
    
    // Utility
    platform: process.platform,
    
    // Event listeners
    onMenuAction: (callback) => ipcRenderer.on('menu-action', callback),
    removeMenuListener: () => ipcRenderer.removeAllListeners('menu-action')
});

// Global app metadata
contextBridge.exposeInMainWorld('APP_METADATA', {
    name: 'HealthTracker 2025',
    version: '1.0.0',
    description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —Ç–µ–ª–∞',
    author: 'HealthTracker Team',
    isElectron: true,
    buildDate: new Date().toISOString()
});

console.log('‚úÖ Electron preload script loaded successfully');
'''

# Save preload.js
with open('preload.js', 'w', encoding='utf-8') as f:
    f.write(preload_js_content)

print("‚úÖ preload.js —Å–æ–∑–¥–∞–Ω –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Electron")

# Create installation and build instructions
readme_content = '''# HealthTracker 2025 - Desktop Edition

–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ Windows –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —Ç–µ–ª–∞, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ –∑–¥–æ—Ä–æ–≤—å—è —Å –ª–æ–∫–∞–ª—å–Ω–æ–π SQLite –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.

## üöÄ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

### üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —Ç–µ–ª–∞
- **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è SVG-—Ñ–∏–≥—É—Ä–∞ —á–µ–ª–æ–≤–µ–∫–∞** —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –∏–∑–º–µ–Ω–µ–Ω–∏–π
- –ò–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–±—ä–µ–º–æ–≤ (—à–µ—è, –≥—Ä—É–¥—å, —Ç–∞–ª–∏—è, –±–µ–¥—Ä–∞, —Ä—É–∫–∏, –Ω–æ–≥–∏)
- –¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–∑–µ–ª–µ–Ω—ã–µ/–∫—Ä–∞—Å–Ω—ã–µ –ª–∏–Ω–∏–∏)
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –ò–ú–¢
- –ì—Ä–∞—Ñ–∏–∫–∏ –¥–∏–Ω–∞–º–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞

### üçé –ú–æ–¥—É–ª—å –ø–∏—Ç–∞–Ω–∏—è
- –î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è –ø–æ –ø—Ä–∏–µ–º–∞–º –ø–∏—â–∏
- –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ë–ñ–£ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –¥–∏–∞–≥—Ä–∞–º–º–∞–º–∏  
- –ë–∞–∑–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –ø–æ–∏—Å–∫–∞
- –ê–Ω–∞–ª–∏–∑ –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤ –∏ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏

### üí™ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
- –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
- –¢–∞–π–º–µ—Ä —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–∞—É–∑—ã
- –¢—Ä–µ–∫–∏–Ω–≥ –ø–æ–¥—Ö–æ–¥–æ–≤, –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –∏ –≤–µ—Å–æ–≤
- –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º

### üò¥ –°–æ–Ω –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ  
- –¢—Ä–µ–∫–µ—Ä –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–Ω–∞
- –ê–Ω–∞–ª–∏–∑ —Ñ–∞–∑ —Å–Ω–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
- –ì—Ä–∞—Ñ–∏–∫ —Å–Ω–∞ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
- –î–Ω–µ–≤–Ω–∏–∫ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è

### üíß –í–æ–¥–Ω—ã–π –±–∞–ª–∞–Ω—Å
- –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç–∞–∫–∞–Ω–∞
- –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–º–æ–≤
- –ì—Ä–∞—Ñ–∏–∫ –ø–æ—á–∞—Å–æ–≤–æ–≥–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è

### üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Ü–µ–ª–∏
- –°–∏—Å—Ç–µ–º–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π
- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ: —Ç–µ–∫—É—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ ‚Üí –∏–∑–º–µ–Ω–µ–Ω–∏—è ‚Üí —Ü–µ–ª—å
- –°–≤–æ–¥–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ –≤—Å–µ—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∑–¥–æ—Ä–æ–≤—å—è
- –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –º–µ–∂–¥—É –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏

## üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

### –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- Node.js 18+ 
- npm –∏–ª–∏ yarn
- Windows 10/11 (–¥–ª—è —Å–±–æ—Ä–∫–∏ .exe)
- Python 3.8+ (–¥–ª—è —Å–±–æ—Ä–∫–∏ sqlite3)
- Visual Studio Build Tools 2022

### 1. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
```bash
# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
npm install

# –ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ –Ω–∞—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –¥–ª—è Electron
npm run postinstall
```

### 2. –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
```bash
# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ dev —Ä–µ–∂–∏–º–µ
npm run dev

# –ò–ª–∏ –æ–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫
npm start
```

### 3. –°–±–æ—Ä–∫–∞ Windows –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
```bash
# –°–±–æ—Ä–∫–∞ –¥–ª—è Windows x64
npm run build-win64

# –°–±–æ—Ä–∫–∞ –¥–ª—è Windows x32  
npm run build-win32

# –°–±–æ—Ä–∫–∞ –¥–ª—è –≤—Å–µ—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä Windows
npm run build-win

# –°–æ–∑–¥–∞–Ω–∏–µ portable –≤–µ—Ä—Å–∏–∏
npm run pack
```

## üì¶ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
healthtracker-2025/
‚îú‚îÄ‚îÄ index.html          # –ì–ª–∞–≤–Ω—ã–π HTML —Ñ–∞–π–ª
‚îú‚îÄ‚îÄ style.css          # –°—Ç–∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îú‚îÄ‚îÄ app.js             # JavaScript –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îú‚îÄ‚îÄ main.js            # –ì–ª–∞–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å Electron
‚îú‚îÄ‚îÄ preload.js         # Preload —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
‚îú‚îÄ‚îÄ package.json       # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Node.js –∏ Electron
‚îú‚îÄ‚îÄ assets/           # –ò–∫–æ–Ω–∫–∏ –∏ —Ä–µ—Å—É—Ä—Å—ã
‚îÇ   ‚îú‚îÄ‚îÄ icon.ico      # –ò–∫–æ–Ω–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Windows
‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îú‚îÄ‚îÄ database/         # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö SQLite  
‚îÇ   ‚îî‚îÄ‚îÄ healthtracker.db
‚îú‚îÄ‚îÄ dist/            # –°–æ–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îÇ   ‚îú‚îÄ‚îÄ win-unpacked/
‚îÇ   ‚îî‚îÄ‚îÄ HealthTracker-2025-Setup-1.0.0.exe
‚îî‚îÄ‚îÄ README.md        # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
```

## üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö

–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω—É—é SQLite –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏:

- **users** - –ø—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π  
- **body_measurements** - –∏–∑–º–µ—Ä–µ–Ω–∏—è —Ç–µ–ª–∞ (–≤–µ—Å, –æ–±—ä–µ–º—ã)
- **nutrition** - –ø–∏—Ç–∞–Ω–∏–µ –∏ –ë–ñ–£
- **workouts** - —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏  
- **sleep** - –¥–∞–Ω–Ω—ã–µ –æ —Å–Ω–µ
- **water** - –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–æ–¥—ã
- **goals** - —Ü–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- **settings** - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

## üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–±–æ—Ä–∫–∏

### Windows Installer (NSIS)
```json
{
  "nsis": {
    "oneClick": false,
    "allowElevation": true,
    "allowToChangeInstallationDirectory": true,
    "createDesktopShortcut": true,
    "createStartMenuShortcut": true,
    "shortcutName": "HealthTracker 2025"
  }
}
```

### Portable –≤–µ—Ä—Å–∏—è
```bash
npm run pack
# –°–æ–∑–¥–∞—Å—Ç –ø–∞–ø–∫—É dist/win-unpacked —Å portable –≤–µ—Ä—Å–∏–µ–π
```

## üìã –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

### –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ
- Windows 10 x64 / Windows 11
- 4 GB RAM
- 200 MB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
- –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞: 1280x720

### –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ  
- Windows 11 x64
- 8 GB RAM
- 500 MB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞  
- –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞: 1920x1080+

## üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è

–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ GitHub Releases. –ù–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏ –±—É–¥—É—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å—Å—è –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.

## üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

- –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–π SQLite –±–∞–∑–µ
- –û—Ç–∫–ª—é—á–µ–Ω nodeIntegration –≤ renderer –ø—Ä–æ—Ü–µ—Å—Å–µ
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è contextIsolation –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ –∫–æ–¥–∞
- –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π preload —Å–∫—Ä–∏–ø—Ç –¥–ª—è IPC –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏

## üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö

- –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤ Excel
- –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤ –¥—Ä—É–≥–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è  
- –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
- –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ–∏—Ç–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π

## üé® –¢–µ–º–∏–∑–∞—Ü–∏—è

- –°–≤–µ—Ç–ª–∞—è –∏ —Ç–µ–º–Ω–∞—è —Ç–µ–º—ã
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ —Ü–≤–µ—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã
- –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –≤—Å–µ—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π

## ü§ù –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–î–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:
- Email: support@healthtracker2025.com
- GitHub Issues: [—Å–æ–∑–¥–∞—Ç—å issue](https://github.com/healthtracker/healthtracker-2025/issues)

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è

MIT License - —Å–º. —Ñ–∞–π–ª LICENSE –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.

---

**HealthTracker 2025** - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π –ø–æ –∑–¥–æ—Ä–æ–≤—å—é –∏ —Ñ–∏—Ç–Ω–µ—Å—É! üí™üèÉ‚Äç‚ôÇÔ∏èü•ó
'''

# Save README.md
with open('README.md', 'w', encoding='utf-8') as f:
    f.write(readme_content)

print("‚úÖ README.md —Å–æ–∑–¥–∞–Ω —Å –ø–æ–ª–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π")

# Create build scripts
build_script_content = '''@echo off
echo ==============================================
echo    HealthTracker 2025 - Windows Build Script
echo ==============================================
echo.

echo [1/5] Installing dependencies...
call npm install
if %errorlevel% neq 0 (
    echo ‚ùå Failed to install dependencies
    pause
    exit /b %errorlevel%
)

echo.
echo [2/5] Rebuilding native modules for Electron...
call npm run postinstall  
if %errorlevel% neq 0 (
    echo ‚ùå Failed to rebuild native modules
    pause
    exit /b %errorlevel%
)

echo.
echo [3/5] Cleaning previous builds...
if exist "dist" rmdir /s /q "dist"

echo.
echo [4/5] Building Windows application...
call npm run build-win
if %errorlevel% neq 0 (
    echo ‚ùå Build failed
    pause
    exit /b %errorlevel%
)

echo.
echo [5/5] Build completed successfully!
echo.
echo ‚úÖ Windows installer: dist\\HealthTracker-2025-Setup-1.0.0.exe
echo ‚úÖ Portable version: dist\\win-unpacked\\
echo.
echo Build artifacts saved in 'dist' directory
pause
'''

# Save build script
with open('build-windows.bat', 'w', encoding='utf-8') as f:
    f.write(build_script_content)

print("‚úÖ build-windows.bat —Å–æ–∑–¥–∞–Ω –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–±–æ—Ä–∫–∏")

# Create development script  
dev_script_content = '''@echo off
echo ==============================================
echo   HealthTracker 2025 - Development Mode
echo ==============================================
echo.

echo Installing/updating dependencies...
call npm install

echo.
echo Starting application in development mode...
echo Press Ctrl+C to stop the application
echo.
call npm run dev
'''

# Save dev script
with open('start-dev.bat', 'w', encoding='utf-8') as f:
    f.write(dev_script_content)

print("‚úÖ start-dev.bat —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏")

print("\nüéâ –í—Å–µ —Ñ–∞–π–ª—ã –¥–ª—è Electron –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
print("\nüìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:")
print("   ‚îú‚îÄ‚îÄ index.html (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)")
print("   ‚îú‚îÄ‚îÄ style.css (—Å—Ç–∏–ª–∏)")  
print("   ‚îú‚îÄ‚îÄ app.js (JavaScript –ª–æ–≥–∏–∫–∞)")
print("   ‚îú‚îÄ‚îÄ main.js (–≥–ª–∞–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å Electron)")
print("   ‚îú‚îÄ‚îÄ preload.js (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)")
print("   ‚îú‚îÄ‚îÄ package.json (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏)")
print("   ‚îú‚îÄ‚îÄ README.md (–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è)")
print("   ‚îú‚îÄ‚îÄ build-windows.bat (—Å–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏)")
print("   ‚îî‚îÄ‚îÄ start-dev.bat (—Å–∫—Ä–∏–ø—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)")

print("\nüöÄ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Windows .exe:")
print("   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+")
print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ build-windows.bat") 
print("   3. –ì–æ—Ç–æ–≤—ã–π .exe –±—É–¥–µ—Ç –≤ –ø–∞–ø–∫–µ dist/")